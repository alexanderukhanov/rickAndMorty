{"version":3,"sources":["components/cards/CardSection.js","components/cards/CardItem.js","components/cards/Cards.js","services/dataService.js","components/error/error.png","components/error/ErrorMessage.js","components/table/TableRow.js","components/table/Table.js","components/locations/Locations.js","components/episodes/Episodes.js","components/navigation/Navigation.js","components/header/Header.js","components/footer/Footer.js","components/locations/LocationInfo.js","components/pagination/Pagination.js","components/episodes/EpisodeInfo.js","components/app/App.js","index.js"],"names":["CardSection","props","className","title","value","CardItem","items","image","name","status","species","location","gender","type","src","alt","toLowerCase","Cards","length","map","item","id","CHARACTERS_URL","LOCATIONS_URL","EPISODES_URL","DataService","url","fetch","response","ok","Error","json","data","page","this","getResource","getLocationByNameUrl","concat","getLocationByIdUrl","ErrorMessage","errorMessage","errorImg","TableRow","values","key","push","i","Table","onClick","sortByClick","headers","header","styleOfSort","isSortedFromAToB","isSortedFromBToA","scope","locationsOrEpisodes","LOCATION_TABLE_HEADERS","INPUT_SEARCH_NAME","SEARCH_INFO_MESSAGE","Locations","state","locations","searchInfo","isErrorSearch","dataService","showLocations","results","isSearch","newLocations","result","dimension","button","to","setState","getDefaultData","getLocations","then","componentDidMount","searchByName","e","preventDefault","target","elements","getLocationsByName","catch","onError","error","message","clearResult","document","forms","onSubmit","required","placeholder","React","Component","STRING_ID","STRING_DATE","HEADERS","Episodes","episodes","getEpisodes","filtratedEpisodes","date","air_date","episode","sortList","isReverseSort","sort","a","b","A","B","Date","itemValue","chooseTypeOfSort","targetId","stringTitle","innerText","Navigation","isHiddenWelcomeBanner","Header","hideWelcomeBanner","href","Footer","LocationInfo","useState","locationData","setLocationData","useEffect","getLocationById","console","log","TEXT_STYLE","Pagination","aria-label","choosePage","isPrevButtonDisabled","pages","isNextButtonDisabled","quantityOfPages","STYLE_PREV_BUTT","STYLE_NEXT_BUTT","EpisodeInfo","fetchedEpisode","setFetchedEpisode","countOfEpisodes","setCountOfEpisodes","characters","setCharacters","setIsPrevButtonDisabled","setIsNextButtonDisabled","Number","info","count","getEpisodeById","classNameForPrevButt","classNameForNextButt","PAGES","App","getCharacters","targetValue","innerHTML","numericTargetValue","prevPage","newPages","nextPage","currentPage","oneMorePrevPage","basename","exact","path","component","render","match","params","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1ff5c2fe.chunk.js","sourcesContent":["export default function CardSection(props) {\r\n    return (\r\n        <>\r\n            <span className=\"text-gray\">{props.title}:</span>\r\n            <p className=\"card-text\">{props.value}</p>\r\n        </>\r\n    )\r\n}","import CardSection from \"./CardSection\"\r\n\r\nfunction CardItem(props) {\r\n    const { image, name, status, species, location, gender, type } = props.items;\r\n    return (\r\n        <div className=\"col mb-4\">\r\n            <div className=\"card h-100\">\r\n                <img\r\n                    className=\"card-img-top\"\r\n                    src={image}\r\n                    alt=\"\"\r\n                />\r\n                <div className=\"card-body\">\r\n                    <h4 className=\"card-title\">{name}</h4>\r\n                    <p className={status.toLowerCase()}>{status} - {species}.</p>\r\n                    <CardSection title=\"Last known location\" value={location.name} />\r\n                    <CardSection title=\"Gender\" value={gender} />\r\n                    {type !== \"\" ? (<CardSection title=\"Type\" value={type} />) : null}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardItem;","import \"./cards.css\";\r\nimport CardItem from \"./CardItem\";\r\n\r\nfunction Cards(props) {\r\n  return (\r\n    props.items.length > 0\r\n      ? <>\r\n        <h3>Cards</h3>\r\n        <div className=\"row row row-cols-1 row-cols-md-5\">\r\n          {props.items.map(item => <CardItem key={item.id} items={item} />)}\r\n        </div>\r\n      </>\r\n      : <h3>Loading cards....</h3>\r\n  );\r\n}\r\n\r\nexport default Cards;\r\n","const CHARACTERS_URL = \"https://rickandmortyapi.com/api/character?page=\";\r\nconst LOCATIONS_URL = \"https://rickandmortyapi.com/api/location/\";\r\nconst EPISODES_URL = \"https://rickandmortyapi.com/api/episode/\";\r\nconst NUMBER_ONE = 1;\r\nclass DataService {\r\n    async getResource(url) {\r\n        const response = await fetch(url);\r\n        if (!response.ok) {\r\n            throw new Error(`Could not fetch ${url}, received ${response.status}`)\r\n        }\r\n        const data = await response.json();\r\n        return data;\r\n    }\r\n    getCharacters(page = NUMBER_ONE) {\r\n        return this.getResource(CHARACTERS_URL + page);\r\n    }\r\n    getLocations() {\r\n        return this.getResource(LOCATIONS_URL);\r\n    }\r\n    getLocationsByName(name) {\r\n        const getLocationByNameUrl = LOCATIONS_URL.concat(\"?name=\", name);\r\n        return this.getResource(getLocationByNameUrl);\r\n    }\r\n    getEpisodes() {\r\n        return this.getResource(EPISODES_URL);\r\n    }\r\n    getLocationById(id) {\r\n        const getLocationByIdUrl = LOCATIONS_URL.concat(id);\r\n        return this.getResource(getLocationByIdUrl);\r\n    }\r\n    getEpisodeById(id) {\r\n        return this.getResource(EPISODES_URL+id);\r\n    }\r\n}\r\n\r\nexport default DataService;","export default __webpack_public_path__ + \"static/media/error.a73a508c.png\";","import errorImg from \"./error.png\"\r\n\r\nexport default function ErrorMessage(props) {\r\n    return (\r\n        <>\r\n            <p>{props.errorMessage}</p>\r\n            <img alt=\"error.img\" id=\"error_img\" src={errorImg}></img>\r\n        </>\r\n    );\r\n}","export default function TableRow(props) {\r\n    let values = [];\r\n    for (let key in props.value) {\r\n        values.push(props.value[key])\r\n    }\r\n    return (\r\n        <tr>\r\n            {values.map((value, i) => <td key={i}>{value}</td>)}\r\n        </tr>\r\n    )\r\n}","import React from \"react\";\r\nimport TableRow from \"../table/TableRow\";\r\nconst STYLE_FOCUSED_HEADER_DOWN = \"focused_header_down\";\r\nconst STYLE_FOCUSED_HEADER_UP = \"focused_header_up\";\r\n\r\nexport default function Table(props) {\r\n    return (\r\n        <table className=\"table\">\r\n            <thead onClick={props.sortByClick} className=\"thead-dark\">\r\n                <tr>\r\n                    {props.headers.map((header, i) => {\r\n                        let styleOfSort;\r\n                        if (header.isSortedFromAToB) { styleOfSort = STYLE_FOCUSED_HEADER_DOWN }\r\n                        else if (header.isSortedFromBToA) { styleOfSort = STYLE_FOCUSED_HEADER_UP }\r\n                        return (\r\n                            <th\r\n                                className=\"header_item\"\r\n                                id={styleOfSort}\r\n                                key={i} scope=\"col\">\r\n                                {header.value}\r\n                            </th>\r\n                        )\r\n                    })\r\n                    }\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {props.locationsOrEpisodes.map(value => <TableRow key={value.id} value={value} />)}\r\n            </tbody>\r\n        </table>\r\n    )\r\n}","import React from \"react\";\r\nimport ErrorMessage from \"../error/ErrorMessage\";\r\nimport Table from \"../table/Table\";\r\nimport DataService from \"../../services/dataService\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst LOCATION_TABLE_HEADERS = [\r\n    { value: \"#\" },\r\n    { value: \"Name\" },\r\n    { value: \"Type\" },\r\n    { value: \"Dimension\" },\r\n    { value: \"\" },\r\n];\r\nconst INPUT_SEARCH_NAME = \"search\";\r\nconst EMPRTY_STRING = \"\";\r\nconst SEARCH_INFO_MESSAGE = \"Search result\";\r\n\r\nclass Locations extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { locations: [], searchInfo: EMPRTY_STRING, isErrorSearch: false, headers: LOCATION_TABLE_HEADERS }\r\n        this.dataService = new DataService();\r\n        this.showLocations = (results, isSearch = false) => {\r\n            let newLocations = results.map(result => {\r\n                return {\r\n                    id: result.id,\r\n                    name: result.name,\r\n                    type: result.type,\r\n                    dimension: result.dimension,\r\n                    button: <Link className=\"btn btn-primary\" to={`locations/${result.id}`}>See more</Link>,\r\n                };\r\n            });\r\n            this.setState({\r\n                locations: newLocations,\r\n                searchInfo: isSearch\r\n                    ? `${SEARCH_INFO_MESSAGE}: ${newLocations.length}`\r\n                    : EMPRTY_STRING,\r\n                isErrorSearch: false,\r\n            });\r\n        };\r\n        this.getDefaultData = () => {\r\n            this.dataService.getLocations().then(data => {\r\n                this.showLocations(data.results)\r\n            });\r\n        };\r\n        this.componentDidMount = () => this.getDefaultData();\r\n        this.searchByName = (e) => {\r\n            e.preventDefault()\r\n            let name = e.target.elements[INPUT_SEARCH_NAME].value;\r\n            this.dataService.getLocationsByName(name)\r\n                .then(data => {\r\n                    this.showLocations(data.results, true)\r\n                }).catch(this.onError)\r\n        };\r\n        this.onError = (error) => {\r\n            this.setState({ isErrorSearch: true, errorMessage: error.message })\r\n        };\r\n        this.clearResult = (e) => {\r\n            e.preventDefault();\r\n            document.forms.locations[INPUT_SEARCH_NAME].value = EMPRTY_STRING;\r\n            this.getDefaultData();\r\n        }\r\n    };\r\n    render() {\r\n        return (\r\n            <>\r\n                <h3>Locations</h3>\r\n                <div className=\"mb-2\">\r\n                    <form name=\"locations\" onSubmit={this.searchByName} className=\"form-inline my-2 my-lg-0\">\r\n                        <input name={INPUT_SEARCH_NAME}\r\n                            required\r\n                            className=\"form-control mr-sm-2\"\r\n                            type=\"search\"\r\n                            placeholder=\"Search\"\r\n                        />\r\n                        <button\r\n                            className=\"btn btn-outline-primary my-2 my-sm-0 search_button\"\r\n                            type=\"submit\"\r\n                        >\r\n                            Search by Name\r\n                </button>\r\n                        <button\r\n                            onClick={this.clearResult}\r\n                            className=\"btn btn-outline-primary my-2 my-sm-0\"\r\n                            type=\"submit\"\r\n                        >\r\n                            Clear result\r\n                </button>\r\n                    </form>\r\n                </div>\r\n                {this.state.searchInfo === EMPRTY_STRING ? null : <p>{this.state.searchInfo}</p>}\r\n                {this.state.isErrorSearch\r\n                    ? <ErrorMessage errorMessage={this.state.errorMessage} />\r\n                    : <Table\r\n                        headers={this.state.headers}\r\n                        locationsOrEpisodes={this.state.locations}\r\n                    />\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Locations;","import React from \"react\";\r\nimport Table from \"../table/Table\";\r\nimport DataService from \"../../services/dataService\";\r\nimport { Link } from \"react-router-dom\"\r\n\r\nconst STRING_ID = \"id\";\r\nconst STRING_NAME = \"name\";\r\nconst STRING_DATE = \"date\";\r\nconst STRING_EPISODE = \"episode\";\r\nconst SYMBOL_SHARP = \"#\";\r\nconst STYLE_FOCUSED_HEADER_DOWN = \"focused_header_down\";\r\nconst HEADERS = [\r\n    { value: \"#\", isSortedFromAToB: false, isSortedFromBToA: false },\r\n    { value: \"Name\", isSortedFromAToB: false, isSortedFromBToA: false },\r\n    { value: \"Date\", isSortedFromAToB: false, isSortedFromBToA: false },\r\n    { value: \"Episode\", isSortedFromAToB: false, isSortedFromBToA: false },\r\n    { value: \"\", isSortedFromAToB: false, isSortedFromBToA: false }\r\n];\r\n\r\nexport default class Episodes extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { episodes: [], headers: HEADERS };\r\n        this.dataService = new DataService();\r\n        this.componentDidMount = () => {\r\n            this.dataService.getEpisodes().then(data => {\r\n                let filtratedEpisodes = data.results.map(value => {\r\n                    return {\r\n                        id: value.id,\r\n                        name: value.name,\r\n                        date: value.air_date,\r\n                        episode: value.episode,\r\n                        button: <Link\r\n                            className=\"btn btn-primary\"\r\n                            to={`/episodes/${value.id}`}\r\n                        >\r\n                            See more\r\n                            </Link>\r\n                    }\r\n                })\r\n                this.setState({ episodes: filtratedEpisodes })\r\n            })\r\n        }\r\n        this.sortList = (key, isReverseSort = false) => {\r\n            this.setState(state => {\r\n                let sort;\r\n                if (key === STRING_DATE) {\r\n                    sort = state.episodes.sort((a, b) => {\r\n                        const A = isReverseSort ? a.date : b.date;\r\n                        const B = isReverseSort ? b.date : a.date\r\n                        return new Date(A) - new Date(B)\r\n                    })\r\n                }\r\n                else {\r\n                    sort = state.episodes.sort((a, b) => {\r\n                        if (a[key] > b[key]) {\r\n                            return isReverseSort ? 1 : -1;\r\n                        }\r\n                        if (a[key] < b[key]) {\r\n                            return isReverseSort ? -1 : 1;\r\n                        }\r\n                        return 0;\r\n                    })\r\n                }\r\n                key = key === STRING_ID ? SYMBOL_SHARP : key;\r\n                let newHeaders = state.headers.map(item => {\r\n                    const itemValue = item.value.toLowerCase()\r\n                    if (isReverseSort) {\r\n                        item.isSortedFromBToA = false;\r\n                        item.isSortedFromAToB = itemValue === key;\r\n                    }\r\n                    else {\r\n                        item.isSortedFromBToA = itemValue === key;\r\n                        item.isSortedFromAToB = false;\r\n                    }\r\n                    return item;\r\n                })\r\n                return { episodes: sort, headers: newHeaders }\r\n            })\r\n        }\r\n        this.chooseTypeOfSort = (targetId, stringTitle) => {\r\n            if (targetId === STYLE_FOCUSED_HEADER_DOWN) {\r\n                return this.sortList(stringTitle)\r\n            }\r\n            this.sortList(stringTitle, true)\r\n        }\r\n        this.sortByClick = (e) => {\r\n            const target = e.target.innerText;\r\n            const targetId = e.target.id;\r\n            switch (target) {\r\n                case HEADERS[0].value:\r\n                    this.chooseTypeOfSort(targetId, STRING_ID);\r\n                    break;\r\n                case HEADERS[1].value:\r\n                    this.chooseTypeOfSort(targetId, STRING_NAME);\r\n                    break;\r\n                case HEADERS[2].value:\r\n                    this.chooseTypeOfSort(targetId, STRING_DATE);\r\n                    break;\r\n                case HEADERS[3].value:\r\n                    this.chooseTypeOfSort(targetId, STRING_EPISODE);\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <>\r\n                <h3>Episodes</h3>\r\n                <Table sortByClick={this.sortByClick} headers={this.state.headers} locationsOrEpisodes={this.state.episodes} />\r\n            </>\r\n        )\r\n    }\r\n}","import { Link } from \"react-router-dom\";\r\n\r\nexport default function Navigation(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-dark bg-dark ${props.isHiddenWelcomeBanner ? \"shift_main_content\" : null}`}>\r\n            <div className=\"container\">\r\n                <Link className=\"navbar-brand\" to=\"/\">\r\n                    Rick and Morty\r\n                </Link>\r\n                <form className=\"form-inline my-2 my-lg-0\">\r\n                    <ul className=\"navbar-nav mr-auto\">\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" to=\"/locations\">\r\n                                Locations\r\n                            </Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link className=\"nav-link\" to=\"/episodes\">\r\n                                Episodes\r\n                            </Link>\r\n                        </li>\r\n                    </ul>\r\n                </form>\r\n            </div>\r\n        </nav>\r\n    )\r\n}","export default function Header(props) {\r\n    return (\r\n        <>\r\n            {props.isHiddenWelcomeBanner\r\n                ? null\r\n                :\r\n                <header className=\"jumbotron my-4\">\r\n                    <h1 className=\"display-3\">Welcome!</h1>\r\n                    <p className=\"lead\">\r\n                        Rick and Morty is an American adult animated science fiction\r\n                        sitcom created by Justin Roiland and Dan Harmon for Cartoon\r\n                        Network's late-night programming block Adult Swim.\r\n                    </p>\r\n                    <button onClick={props.hideWelcomeBanner} href=\"#\" className=\"btn btn-primary btn-lg\">\r\n                        Click to hide\r\n                    </button>\r\n                </header>}\r\n        </>\r\n    )\r\n}","export default function Footer() {\r\n    return (\r\n        <footer className=\"py-5 bg-dark\">\r\n            <div className=\"container\">\r\n                <p className=\"m-0 text-center text-white\">\r\n                    Copyright &copy; Your Website 2020\r\n            </p>\r\n            </div>\r\n        </footer>\r\n    )\r\n}","import DataService from \"../../services/dataService\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nexport default function LocationInfo(props) {\r\n    const [locationData, setLocationData] = useState({});\r\n    useEffect(() => {\r\n        let dataServise = new DataService();\r\n        dataServise.getLocationById(props.id)\r\n            .then(data => {\r\n                setLocationData(data)\r\n            })\r\n            .catch(error => console.log(error.message))\r\n    }, [props.id])\r\n    const { name, type, dimension } = locationData;\r\n    return (\r\n        <div className=\"card\">\r\n            <div className=\"card-header\">{name}</div>\r\n            <div className=\"card-body\">\r\n                <h5 className=\"card-title\">{type}</h5>\r\n                <p className=\"card-text\">\r\n                    <strong>\r\n                        Dimension is\r\n                    </strong>  {dimension}</p>\r\n                <Link className=\"btn btn-primary\" to=\"/locations\">\r\n                    Go back\r\n                    </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { Link } from \"react-router-dom\";\r\nconst TEXT_STYLE = \"disabled\";\r\n\r\nexport default function Pagination(props) {\r\n  return (\r\n    <nav aria-label=\"...\">\r\n      <ul onClick={props.choosePage} className=\"pagination justify-content-center\">\r\n        <li id=\"prevButton\" className={`page-item ${props.isPrevButtonDisabled ? TEXT_STYLE : null}`}>\r\n          <Link className=\"page-link\" to=\"#\">Previous</Link>\r\n        </li>\r\n        {props.pages.map((value, i) => {\r\n          if (value === props.page) {\r\n            return (\r\n              <li key={i} className=\"page-item active\">\r\n                <Link className=\"page-link\" to=\"#\">\r\n                  {value}\r\n                </Link>\r\n              </li>\r\n            )\r\n          } return (\r\n            <li key={i} className=\"page-item\">\r\n              <Link className=\"page-link\" to=\"#\">\r\n                {value}\r\n              </Link>\r\n            </li>\r\n          )\r\n        })}\r\n        <li id=\"nextButton\" className={`page-item ${props.isNextButtonDisabled ? TEXT_STYLE : null}`}>\r\n          <Link className=\"page-link\" to=\"#\">Next</Link>\r\n        </li>\r\n      </ul>\r\n      <p id=\"nuber_of_pages\">{props.page} of {props.quantityOfPages}</p>\r\n    </nav>\r\n  )\r\n}","import DataService from \"../../services/dataService\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\nconst NUMBER_ONE = 1;\r\nconst STYLE_DISABLED = \"disabled\";\r\nconst STYLE_PREV_BUTT = \"btn btn-primary \";\r\nconst STYLE_NEXT_BUTT = \"btn btn-secondary \";\r\n\r\nexport default function EpisodeInfo(props) {\r\n    const [fetchedEpisode, setFetchedEpisode] = useState({});\r\n    const [countOfEpisodes, setCountOfEpisodes] = useState(null);\r\n    const [characters, setCharacters] = useState(null);\r\n    const [isPrevButtonDisabled, setIsPrevButtonDisabled] = useState(false);\r\n    const [isNextButtonDisabled, setIsNextButtonDisabled] = useState(false);\r\n    const id = Number(props.id);\r\n    useEffect(() => {\r\n        let dataService = new DataService();\r\n\r\n        dataService\r\n            .getEpisodes()\r\n            .then(data => setCountOfEpisodes(data.info.count))\r\n            .catch(error => console.log(error.message));\r\n\r\n        dataService\r\n            .getEpisodeById(id)\r\n            .then(data => {\r\n                setIsPrevButtonDisabled(false);\r\n                setIsNextButtonDisabled(false);\r\n                if (id === countOfEpisodes) { setIsNextButtonDisabled(true) }\r\n                else if (id === NUMBER_ONE) { setIsPrevButtonDisabled(true) }\r\n                setFetchedEpisode(data);\r\n                setCharacters(data.characters.length)\r\n            })\r\n            .catch(error => console.log(error.message));\r\n    }, [id, countOfEpisodes])\r\n\r\n    const { name, episode, air_date } = fetchedEpisode;\r\n    const classNameForPrevButt = isPrevButtonDisabled\r\n        ? STYLE_PREV_BUTT + STYLE_DISABLED\r\n        : STYLE_PREV_BUTT\r\n    const classNameForNextButt = isNextButtonDisabled\r\n        ? STYLE_NEXT_BUTT + STYLE_DISABLED\r\n        : STYLE_NEXT_BUTT\r\n    return (\r\n        <>\r\n            <h3>Episode detailts</h3>\r\n            <div className=\"list-group lead\">\r\n                <div className=\"list-group-item\">\r\n                    <div className=\"d-flex justify-content-between\">\r\n                        <h5 className=\"mb-1\">{episode}</h5>\r\n                        <small>{air_date}</small>\r\n                    </div>\r\n                    <div className=\"mb-1\">\r\n                        <div className=\"d-inline\"><span className=\"text-gray\">Name:</span></div>\r\n                        <p className=\"d-inline p-2\">{name}</p>\r\n                    </div>\r\n                    <div className=\"mb-1\">\r\n                        <div className=\"d-inline\"><span className=\"text-gray\">Сharacters:</span></div>\r\n                        <p className=\"d-inline p-2\">{characters}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"modal-footerr\">\r\n                <Link className=\"btn btn-primary\" to=\"/episodes\">\r\n                    Go back\r\n                    </Link>\r\n                <div className=\"nav_buttons\">\r\n                    <Link\r\n                        to={`/episodes/${id - NUMBER_ONE}`}\r\n                        className={classNameForPrevButt}\r\n                    >\r\n                        Previous\r\n                        </Link>\r\n                    <Link\r\n                        to={`/episodes/${(id + NUMBER_ONE)}`}\r\n                        className={classNameForNextButt}\r\n                    >\r\n                        Next\r\n                        </Link>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}","import Cards from \"../cards/Cards.js\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport React from \"react\";\r\nimport DataService from \"../../services/dataService\";\r\nimport Locations from \"../locations/Locations\";\r\nimport Episodes from \"../episodes/Episodes\";\r\nimport Navigation from \"../navigation/Navigation\"\r\nimport Header from \"../header/Header.js\";\r\nimport Footer from \"../footer/Footer\";\r\nimport { BrowserRouter, Route } from \"react-router-dom\";\r\nimport LocationInfo from \"../locations/LocationInfo\";\r\nimport Pagination from \"../pagination/Pagination\";\r\nimport EpisodeInfo from \"../episodes/EpisodeInfo\";\r\n\r\nconst NUMBER_ONE = 1;\r\nconst TEXT_NEXT = \"Next\";\r\nconst TEXT_PREVIOUS = \"Previous\";\r\nconst PAGES = [1, 2, 3];\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      items: [],\r\n      isHiddenWelcomeBanner: false,\r\n      page: NUMBER_ONE,\r\n      quantityOfPages: NUMBER_ONE,\r\n      pages: PAGES,\r\n      isPrevButtonDisabled: true,\r\n      isNextButtonDisabled: false,\r\n    };\r\n    this.dataService = new DataService()\r\n    this.componentDidMount = () => {\r\n      this.dataService\r\n        .getCharacters()\r\n        .then(data => {\r\n          this.setState({ items: data.results, quantityOfPages: data.info.pages })\r\n        })\r\n        .catch(error => console.log(error.message))\r\n    }\r\n    this.hideWelcomeBanner = () => {\r\n      this.setState({ isHiddenWelcomeBanner: true })\r\n    }\r\n    this.choosePage = (e) => {\r\n      let targetValue = e.target.innerHTML;\r\n      let numericTargetValue = Number(targetValue);\r\n      if (targetValue > NUMBER_ONE) {\r\n        this.setState({ isPrevButtonDisabled: false })\r\n      }\r\n      else if (numericTargetValue === NUMBER_ONE) {\r\n        this.setState({ isPrevButtonDisabled: true })\r\n      }\r\n      else if (targetValue === TEXT_PREVIOUS) {\r\n        this.setState(state => {\r\n          let prevPage = state.page - NUMBER_ONE;\r\n          this.dataService\r\n            .getCharacters(prevPage)\r\n            .then(data => {\r\n              let newPages = [prevPage - NUMBER_ONE, prevPage, prevPage + NUMBER_ONE];\r\n              this.setState({\r\n                items: data.results,\r\n                page: prevPage,\r\n                pages: newPages,\r\n                isNextButtonDisabled: false,\r\n              });\r\n              if (prevPage === NUMBER_ONE) {\r\n                this.setState({ pages: PAGES, isPrevButtonDisabled: true });\r\n              }\r\n            })\r\n            .catch(error => console.log(error.message))\r\n        });\r\n      }\r\n      else if (targetValue === TEXT_NEXT) {\r\n        this.setState(state => {\r\n          let nextPage = state.page + NUMBER_ONE;\r\n          this.dataService\r\n            .getCharacters(nextPage)\r\n            .then(data => {\r\n              let newPages = [nextPage - NUMBER_ONE, nextPage, nextPage + NUMBER_ONE];\r\n              this.setState({\r\n                items: data.results,\r\n                page: nextPage,\r\n                pages: newPages,\r\n                isPrevButtonDisabled: false\r\n              });\r\n              if (nextPage === this.state.quantityOfPages) {\r\n                let currentPage = nextPage;\r\n                let prevPage = currentPage - NUMBER_ONE;\r\n                let oneMorePrevPage = prevPage - NUMBER_ONE\r\n                this.setState({ pages: [oneMorePrevPage, prevPage, currentPage], isNextButtonDisabled: true });\r\n              }\r\n            })\r\n            .catch(error => console.log(error.message))\r\n        })\r\n        return;\r\n      }\r\n      this.dataService\r\n        .getCharacters(targetValue)\r\n        .then(data => {\r\n          if (numericTargetValue) {\r\n            const status = numericTargetValue === this.state.quantityOfPages;\r\n            this.setState({\r\n              items: data.results,\r\n              page: numericTargetValue,\r\n              isNextButtonDisabled: status\r\n            })\r\n          }\r\n        })\r\n        .catch(error => console.log(error.message))\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <BrowserRouter basename=\"/rickAndMorty\">\r\n        <div className=\"main\">\r\n          <Navigation isHiddenWelcomeBanner={this.state.isHiddenWelcomeBanner} />\r\n          <div className=\"container\">\r\n            <Header\r\n              isHiddenWelcomeBanner={this.state.isHiddenWelcomeBanner}\r\n              hideWelcomeBanner={this.hideWelcomeBanner}\r\n            />\r\n            <Route exact path=\"/episodes\" component={Episodes} />\r\n            <Route exact path=\"/locations\" component={Locations} />\r\n            <Route exact path=\"/\" render={() =>\r\n              <Pagination\r\n                choosePage={this.choosePage}\r\n                pages={this.state.pages}\r\n                page={this.state.page}\r\n                quantityOfPages={this.state.quantityOfPages}\r\n                isPrevButtonDisabled={this.state.isPrevButtonDisabled}\r\n                isNextButtonDisabled={this.state.isNextButtonDisabled}\r\n              />} />\r\n            <Route exact path=\"/\" component={() =>\r\n              <Cards\r\n                items={this.state.items}\r\n              />} />\r\n            <Route path=\"/locations/:id\"\r\n              render={(props) => <LocationInfo id={props.match.params.id} />\r\n\r\n              }\r\n            />\r\n            <Route\r\n              path=\"/episodes/:id\"\r\n              render={(props) => <EpisodeInfo id={props.match.params.id} />\r\n              }\r\n            />\r\n          </div>\r\n          <Footer />\r\n        </div>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./components/app/App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}